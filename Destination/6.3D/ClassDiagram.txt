---
config:
  theme: mc
  look: classic
  layout: elk
---
classDiagram
    class User {
        - userId : int
        - username : string
        - email : string
        - password : string
        - isAuthenticated : bool
        - userType : UserType
        - bankAccount : BankAccount
        + Login() : bool
        + Logout() : void
        + UpdateProfile() : bool
    }
    class Customer {
        - shoppingCart : ShoppingCart
        - orderHistory : List~Order~
        + AddToCart(item : Food) : void
        + PlaceOrder() : bool
        + BrowseRestaurants() : List~Restaurant~
        + ViewMenu(restaurant : Restaurant) : List~Food~
    }
    class Restaurant {
        - restaurantId : int
        - name : string
        - address : string
        - rating : double
        - menu : List~Food~
        - category : string
        - operatingHours : string
        + ProcessOrder(order : Order) : bool
        + GetMenu() : List~Food~
        + AddMenuItem(item : Food) : bool
        + ViewOrders() : List~Order~
        + UpdateOrderStatus() : bool
        + UpdateMenu() : bool
    }
    class Food {
        <<abstract>>
        - foodId : int
        - name : string
        - price : decimal
        - description : string
        - category : FoodCategory
        - restaurant : Restaurant
        - isAvailable : bool
        - prepTime : int
        + GetDetails() : string
    }
    class Dish {
        - servingSize : string
        - spiceLevel : int
        - calories : int
        - ingredients : List~string~
    }
    class Drink {
        - volume : string
        - temperature : Temperature
        - isCarbonated : bool
        - hasAlcohol : bool
    }
    class Snack {
        - packageSize : string
        - isHealthy : bool
        - allergens : List~string~
    }
    class ShoppingCart {
        - items : List~Food~
        - quantities : Dictionary~Food_int~
        + AddItem(item : Food) : void
        + RemoveItem(item : Food) : void
        + CalculateTotal() : decimal
        + Clear() : void
        + ConvertToOrder() : Order
    }
    class BankAccount {
        - accountNumber : string
        - balance : decimal
        - pin : string
        - isActive : bool
        + ProcessPayment(amount : decimal) : bool
        + GetBalance() : decimal
    }
    class Order {
        - orderId : int
        - customer : Customer
        - restaurant : Restaurant
        - orderItems : List~Food~
        - quantities : Dictionary~Food_int~
        - totalAmount : decimal
        - orderDate : DateTime
        - status : OrderStatus
        - deliveryAddress : string
        + CalculateTotal() : decimal
        + UpdateStatus(status : OrderStatus) : void
        + GetOrderDetails() : string
        + AddItem(item : Food, quantity : int) : void
    }
    class UserType {
        <<enumeration>>
        Customer
        RestaurantOwner
        DeliveryDriver
        Admin
    }
    class FoodCategory {
        <<enumeration>>
        MainCourse
        Appetizer
        Dessert
        Beverage
        Snack
    }
    class OrderStatus {
        <<enumeration>>
        Placed
        Confirmed
        Preparing
        Ready
        OutForDelivery
        Delivered
        Cancelled
    }
    User <|-- Customer : inherits
    User <|-- Restaurant : inherits
    Food <|-- Dish : inherits
    Food <|-- Drink : inherits
    Food <|-- Snack : inherits
    Customer "1" --> "1" ShoppingCart : has
    Customer "1" ..> "1..*" Food : buy
    Customer "1" ..> "0..*" Restaurant : browse
    User "1" --> "1" BankAccount : uses
    Customer "1" --o "0..*" Order : places
    Restaurant "1" --o "1..*" Food : contains
    Restaurant "1" ..> "0..*" Order : receives
    ShoppingCart "1" --o "0..*" Food : contains
    Order "1" --o "1..*" Food : contains
    User --> UserType : uses
    Food --> FoodCategory : categorized by
    Order --> OrderStatus : has

